@model HoltDan.Models.MusicViewModel
@{
    Layout = "~/Views/Shared/_LayoutMinimal.cshtml";
}
@section Styles
{
    <style>
        .danArtist {
            cursor: pointer;
        }
        html, body {
            height: 100%;
        }

        /* Main view, move content down due to fixed navbar. */
        .main-wrapper {
            height: 100%;
            width: 100%;
            position: absolute;
            top: 0px;
            left: 0px;
            /*padding-top: 50px;*/
        }

        /* Container for a sidebar. */
        .sidebar-container {
            height: 100%;
            position: fixed;
            padding: 0px;
            /*margin-top: -50px;
            padding-top: 50px;*/
            border-right: 1px solid #ddd;
        }

        .sidebar-header {
            position: relative;
            padding: 15px;
            border-bottom: 1px solid #ddd;
        }

        /* Scrollable sidebar. */
        .sidebar {
            height: 100%;
            position: relative;
            overflow-y: scroll;
        }

        .main-view {
            height: 100%;
            overflow: auto;
            position: relative;
            padding: 0px;
        }
    </style>
}
<div class="main-wrapper">
    <div class="danDiv">
        <h1>Music!</h1>
        <div class="sidebar-container col-xs-3">
            <div class="sidebar">
                @foreach (var dir in Model.Dirs)
                {
                    var artName = dir.Substring(dir.LastIndexOf("\\") + 1);
                    <div class="danArtist" data-dir="@dir" data-artist-name="@artName">
                        @artName
                        <div class="danArtistAlbumsDir danSongAlbum" data-artist-name="@artName">
                            SPIN!
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="main-view col-xs-9">
            <div id="songs"></div>
        </div>
    </div>
</div>
@section Scripts
{
    <script type="text/javascript">
        function ArtistData(elem) {
            let $elem = $(elem);
            let data = {
                dirName: $elem.data('dir'),
                artName: $elem.data('artist-name'),
                dirDiv: $(".danArtistAlbumsDir[data-artist-name='" + $elem.data('artist-name') + "']")
            }
            return data;
        }
        function AlbumData(elem) {
            let $elem = $(elem);
            let data = {
                artData: ArtistData($elem.closest('.danArtist')),
                albName: $elem.data('album-name')
            }
            return data;
        }
        function HandleAlbumEvents() {
            $(".danAlbum").unbind('click').click(function (e) {
                debugger;
                e.stopPropagation();
                //let $this = $(this);
                let albData = AlbumData(this);
                $.get("@Url.Action("Album", new { artist = "XXX", album = "YYY" })".replace("XXX", artData.artName).replace("YYY".artData.albName),
                    function (d, textStatus, jqXHR) {
                        $('#songs').html(d)
                        //HandleAlbumEvents();
                    });
            });
        }
        $(".danArtist").click(function () {
            //debugger;
            let artData = ArtistData(this);
            if (artData.dirDiv.is(':visible'))
                artData.dirDiv.hide();
            else {
                $.get("@Url.Action("AlbumList", new { artist = "XXX" })".replace("XXX", artData.artName),
                    function (d, textStatus, jqXHR) {
                        artData.dirDiv.html(d);
                        HandleAlbumEvents();
                    });
                artData.dirDiv.show();
            }
        });
        $(".danArtistAlbumsDir").hide();

    </script>
}
